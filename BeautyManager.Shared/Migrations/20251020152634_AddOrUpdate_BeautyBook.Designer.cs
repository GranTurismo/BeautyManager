// <auto-generated />
using System;
using BeautyManager.Shared.Connection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautyManager.Shared.Migrations
{
    [DbContext(typeof(BeautyDbContext))]
    [Migration("20251020152634_AddOrUpdate_BeautyBook")]
    partial class AddOrUpdate_BeautyBook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.BeautyBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CancellationCode")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("ExecutingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("StylistId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StylistId");

                    b.HasIndex("TaskId");

                    b.ToTable("BeautyBooks");
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.BeautyTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("TaskDuration")
                        .HasColumnType("time(6)");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BeautyTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TaskDuration = new TimeOnly(1, 0, 0),
                            TaskTitle = "Man haircut"
                        },
                        new
                        {
                            Id = 2,
                            TaskDuration = new TimeOnly(1, 30, 0),
                            TaskTitle = "Man haircut + beard"
                        },
                        new
                        {
                            Id = 3,
                            TaskDuration = new TimeOnly(0, 30, 0),
                            TaskTitle = "Man beard"
                        },
                        new
                        {
                            Id = 4,
                            TaskDuration = new TimeOnly(1, 30, 0),
                            TaskTitle = "Woman haircut"
                        },
                        new
                        {
                            Id = 5,
                            TaskDuration = new TimeOnly(2, 0, 0),
                            TaskTitle = "Woman haircut + hair wash"
                        });
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.BeautyTaskStylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeautyTaskId")
                        .HasColumnType("int");

                    b.Property<int>("StylistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeautyTaskId");

                    b.HasIndex("StylistId");

                    b.ToTable("BeautyTaskStylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeautyTaskId = 1,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            BeautyTaskId = 2,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 3,
                            BeautyTaskId = 3,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 4,
                            BeautyTaskId = 4,
                            StylistId = 2
                        },
                        new
                        {
                            Id = 5,
                            BeautyTaskId = 5,
                            StylistId = 2
                        });
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.BeautyBook", b =>
                {
                    b.HasOne("BeautyManager.Shared.Models.Db.Stylist", null)
                        .WithMany("Books")
                        .HasForeignKey("StylistId");

                    b.HasOne("BeautyManager.Shared.Models.Db.BeautyTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.BeautyTaskStylist", b =>
                {
                    b.HasOne("BeautyManager.Shared.Models.Db.BeautyTask", "BeautyTask")
                        .WithMany("BeautyTaskStylists")
                        .HasForeignKey("BeautyTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautyManager.Shared.Models.Db.Stylist", "Stylist")
                        .WithMany("BeautyTaskStylists")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeautyTask");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.BeautyTask", b =>
                {
                    b.Navigation("BeautyTaskStylists");
                });

            modelBuilder.Entity("BeautyManager.Shared.Models.Db.Stylist", b =>
                {
                    b.Navigation("BeautyTaskStylists");

                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
